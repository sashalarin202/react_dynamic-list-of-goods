{"version":3,"sources":["components/GoodsList/GoodsList.js","api/goods.js","App.js","index.js"],"names":["GoodsList","goods","map","good","className","key","id","style","color","name","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","splice","getRedGoods","filter","App","state","renderList","handleAllgoods","allGoods","setState","handleFirstFiveGoods","first5goods","handleRedGoods","redGoods","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAGaA,G,MAAY,SAAC,GAAD,SAAGC,MACpBC,KAAI,SAAAC,GAAI,OACZ,wBACEC,UAAU,8BACVC,IAAKF,EAAKG,IAEV,wBACEF,UAAU,yCACVG,MAAO,CAAEC,MAAOL,EAAKK,QAEpBL,EAAKM,YCVP,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBACvBL,IACGE,MAAK,SAAAX,GAAK,OAAIA,EACZe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAER,KAAKU,cAAcD,EAAET,SACtCW,OAAO,EAAG,OAGJC,EAAc,kBACzBX,IACGE,MAAK,SAAAX,GAAK,OAAIA,EAAMqB,QAAO,SAAAnB,GAAI,MAAmB,QAAfA,EAAKK,aCqD9Be,E,4MA/DbC,MAAQ,CACNC,WAAY,I,EAGdC,eAAiB,kBACfhB,IACGE,MAAK,SAACe,GACL,EAAKC,SAAS,CACZH,WAAYE,Q,EAKpBE,qBAAuB,kBACrBd,IACGH,MAAK,SAACkB,GACL,EAAKF,SAAS,CACZH,WAAYK,Q,EAKpBC,eAAiB,kBACfV,IACGT,MAAK,SAACoB,GACL,EAAKJ,SAAS,CACZH,WAAYO,Q,uDAKV,IACAP,EAAeQ,KAAKT,MAApBC,WAER,OACE,6BACE,4BACES,KAAK,SACLC,QAASF,KAAKP,gBAFhB,kBAOA,4BACEQ,KAAK,SACLC,QAASF,KAAKJ,sBAFhB,sBAOA,4BACEK,KAAK,SACLC,QAASF,KAAKF,gBAFhB,kBAOA,kBAAC,EAAD,CAAW9B,MAAOwB,S,GA1DRW,IAAMC,WCFxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5fe79668.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  goods.map(good => (\n    <ul\n      className=\"list-group list-group-flush\"\n      key={good.id}\n    >\n      <li\n        className=\"list-group-item list-group-item-action\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    </ul>\n  ))\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .splice(0, 5))\n);\n\nexport const getRedGoods = () => (\n  getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n);\n","import React from 'react';\n\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    renderList: [],\n  }\n\n  handleAllgoods = () => (\n    getAll()\n      .then((allGoods) => {\n        this.setState({\n          renderList: allGoods,\n        });\n      })\n  );\n\n  handleFirstFiveGoods = () => (\n    get5First()\n      .then((first5goods) => {\n        this.setState({\n          renderList: first5goods,\n        });\n      })\n  )\n\n  handleRedGoods = () => (\n    getRedGoods()\n      .then((redGoods) => {\n        this.setState({\n          renderList: redGoods,\n        });\n      })\n  )\n\n  render() {\n    const { renderList } = this.state;\n\n    return (\n      <div>\n        <button\n          type=\"submit\"\n          onClick={this.handleAllgoods}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"submit\"\n          onClick={this.handleFirstFiveGoods}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"submit\"\n          onClick={this.handleRedGoods}\n        >\n          Load red goods\n        </button>\n\n        <GoodsList goods={renderList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}